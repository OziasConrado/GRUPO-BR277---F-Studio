
rules_version = '2';

service firebase.storage {
  match /b/{bucket}/o {
    
    // Default: Public read, private write
    match /{allPaths=**} {
      allow read;
      allow write: if false;
    }

    // Post images: public read, private write for authenticated users
    match /images/{userId}/{allPaths=**} {
      allow read;
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024 // 5MB limit
                   && request.resource.contentType.matches('image/.*');
    }

    // Post videos: public read, private write for authenticated users
    match /videos/{userId}/{allPaths=**} {
      allow read;
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.size < 50 * 1024 * 1024 // 50MB limit
                   && request.resource.contentType.matches('video/.*');
    }

    // Chat images: private read/write for authenticated users
    match /chat_images/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
                   && request.auth.uid == userId
                   && request.resource.size < 5 * 1024 * 1024 // 5MB limit
                   && request.resource.contentType.matches('image/.*');
    }
    
    // Chat audio: private read/write for authenticated users
    match /chat_audio/{userId}/{allPaths=**} {
      allow read: if request.auth != null;
      allow write: if request.auth != null
                   && request.auth.uid == userId
                   && request.resource.size < 10 * 1024 * 1024 // 10MB limit
                   && request.resource.contentType.matches('audio/.*');
    }
    
    // Profile pictures: public read, private write for owner
    match /profile_pictures/{userId}/{allPaths=**} {
      allow read;
      allow write: if request.auth != null 
                   && request.auth.uid == userId
                   && request.resource.size < 2 * 1024 * 1024 // 2MB limit
                   && request.resource.contentType.matches('image/.*');
    }

    // Indicated points images: public read, private write for authenticated users
    match /indicated_points_images/{userId}/{allPaths=**} {
        allow read;
        allow write: if request.auth != null
                     && request.auth.uid == userId
                     && request.resource.size < 2 * 1024 * 1024 // 2MB limit
                     && request.resource.contentType.matches('image/.*');
    }
  }
}
