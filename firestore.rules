
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
  
    // Default security: Deny all reads and writes by default
    match /{document=**} {
      allow read, write: if false;
    }
    
    // USERS: Users can read anyone's profile, but only write to their own.
    match /Usuarios/{userId} {
      allow read: if request.auth != null;
      allow create: if request.auth.uid == userId;
      allow update: if request.auth.uid == userId;
    }
    
    // POSTS: Logged-in users can read all posts. They can only create, update,
    // or soft-delete their own posts.
    match /posts/{postId} {
      allow read: if request.auth != null;
      
      // Create: User must be author, can't create deleted/edited posts
      allow create: if request.auth != null
                    && request.resource.data.userId == request.auth.uid
                    && request.resource.data.deleted == false
                    && request.resource.data.edited == false;
      
      // Update: User must be author. Allow updating text or soft-deleting.
      allow update: if request.auth != null
                     && resource.data.userId == request.auth.uid
                     && (
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['text', 'edited', 'editedAt'])) ||
                       (request.resource.data.diff(resource.data).affectedKeys().hasOnly(['deleted']))
                     );
    }
    
    // POST COMMENTS: Logged-in users can read/write comments.
    match /posts/{postId}/comments/{commentId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null 
                     && request.resource.data.userId == request.auth.uid;
    }
    
    // POST REACTIONS: Users can only create/update their own reaction.
    match /posts/{postId}/userReactions/{reactionId} {
        allow read: if request.auth != null;
        allow create, update: if request.auth != null && request.auth.uid == reactionId;
    }
    
    // CHAT MESSAGES: Group chat where logged-in users can read/write.
    match /chatMessages/{messageId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
                       && request.resource.data.userId == request.auth.uid;
    }
    
    // ALERTS: Logged-in users can read all alerts and create their own.
    match /alerts/{alertId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
                       && request.resource.data.userId == request.auth.uid;
    }

    // REELS: Logged-in users can read all reels and create their own.
    match /reels/{reelId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
                       && request.resource.data.userId == request.auth.uid;
    }

    // SAU REVIEWS: Logged-in users can read all reviews and create their own.
    match /sau_reviews/{reviewId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
                       && request.resource.data.userId == request.auth.uid;
    }

    // BUSINESSES: Logged-in users can read all business listings and create their own.
    match /businesses/{businessId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
                       && request.resource.data.userId == request.auth.uid;
    }

    // TOURIST POINTS: Logged-in users can read all and indicate new ones.
    match /tourist_points_indicated/{pointId} {
        allow read: if request.auth != null;
        allow create: if request.auth != null
                       && request.resource.data.indicatedByUserId == request.auth.uid;
    }
  }
}
