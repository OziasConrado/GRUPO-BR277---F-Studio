rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Regra geral: bloqueia tudo por padrão
    match /{document=**} {
      allow read, write: if false;
    }
    
    // Libera acesso à coleção de usuários
    match /Usuarios/{userId} {
      allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;

      // Permite leitura e escrita nas subcoleções do usuário
      match /{allSubcollections=**} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    // Regras para a coleção de posts
    match /posts/{postId} {
      // Qualquer um pode ler os posts
      allow read: if true;
      // Apenas usuários autenticados podem criar posts
      allow create: if request.auth != null;
      // Apenas o autor do post pode atualizar (exceto reações) ou deletar
      allow update, delete: if resource.data.userId == request.auth.uid;
      
      // Regra específica para permitir atualização do campo de reações por qualquer usuário autenticado
      allow update: if request.auth != null && request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions']);

      // Subcoleção de reações de usuários
      match /userReactions/{userId} {
        // Qualquer usuário autenticado pode ler qualquer reação
        allow read: if request.auth != null;
        // Um usuário só pode criar, atualizar ou deletar sua própria reação
        allow write: if request.auth.uid == userId;
      }

      // Subcoleção de comentários
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if resource.data.userId == request.auth.uid;
      }
    }

    // Regras para a coleção de reels
    match /reels/{reelId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update: if request.resource.data.diff(resource.data).affectedKeys().hasOnly(['reactions']) && request.auth != null;
      allow update: if resource.data.userId == request.auth.uid; // Autor pode editar descrição, etc.
      allow delete: if resource.data.userId == request.auth.uid;

      // Subcoleção de reações dos reels
      match /userReactions/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == userId;
      }
      
      // Subcoleção de comentários dos reels
      match /comments/{commentId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update, delete: if resource.data.userId == request.auth.uid;
      }
    }

    // Regras para a coleção de chat
    match /chatMessages/{messageId} {
      allow read: if request.auth != null;
      allow create: if request.auth != null;
      allow update: if resource.data.userId == request.auth.uid;
      allow delete: if resource.data.userId == request.auth.uid;
      
      // Reações nas mensagens do chat
      match /userReactions/{userId} {
        allow read: if request.auth != null;
        allow write: if request.auth.uid == userId;
      }
    }

    // Regras para a coleção de alertas
    match /alerts/{alertId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if resource.data.userId == request.auth.uid;
    }

    // Regras para o guia comercial
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.ownerId; // Supondo um campo ownerId
    }

    // Regras para reviews do SAU
    match /sau_reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null;
    }

    // Regras para pontos turísticos
    match /tourist_points_indicated/{pointId} {
        allow read: if true;
        allow create: if request.auth != null;
        allow update: if request.auth != null && (
            request.resource.data.diff(resource.data).affectedKeys().hasOnly(['averageRating', 'reviewCount']) ||
            resource.data.indicatedByUserId == request.auth.uid
        );
        allow delete: if resource.data.indicatedByUserId == request.auth.uid;

        match /userVotes/{userId} {
          allow read, write: if request.auth.uid == userId;
        }
    }

    // Regras para reviews de pontos turísticos
    match /tourist_point_reviews/{reviewId} {
        allow read: if true;
        allow create: if request.auth != null;
    }
  }
}
