rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /Usuarios/{userId} {
      // Allow users to read public data, but only write to their own document.
      allow read: if true;
      allow write: if request.auth.uid == userId;

      // Allow users to read and write their own notifications.
      match /notifications/{notificationId} {
        allow read, write: if request.auth.uid == userId;
      }
    }

    match /posts/{postId} {
      allow read: if resource.data.deleted == false;
      allow create: if request.auth.uid != null;
      allow update: if request.auth.uid == resource.data.userId;

      match /comments/{commentId} {
        allow read: true;
        allow create: if request.auth.uid != null;
        allow delete: if request.auth.uid == resource.data.userId;
      }

      match /userReactions/{userId} {
        allow read, write: if request.auth.uid == userId;
      }

      match /userVotes/{userId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
    
    match /alerts/{alertId} {
      allow read: true;
      allow create: if request.auth.uid != null;
    }
    
    match /reels/{reelId} {
      allow read: true;
      allow create: if request.auth.uid != null;
    }

    match /tourist_points_indicated/{pointId} {
      allow read: true;
      allow create: if request.auth != null;
    }

    match /sau_reviews/{reviewId} {
      allow read: true;
      allow create: if request.auth != null;
    }
    
    match /chatMessages/{messageId} {
      allow read: true;
      allow create: if request.auth != null;
      allow update, delete: if request.auth.uid == resource.data.userId;

      match /userReactions/{userId} {
        allow read, write: if request.auth.uid == userId;
      }
    }
  }
}
