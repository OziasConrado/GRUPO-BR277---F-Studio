
rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {

    // Helper function to check if a user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }

    // Helper function to check if the user is the owner of the document
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    // User profiles can only be read and updated by the owner
    match /Usuarios/{userId} {
      allow read, update: if isOwner(userId);
      allow create: if isAuthenticated();
    }

    // Public content that anyone can read, but only authenticated users can create.
    match /posts/{postId} {
      allow read: if true;
      allow create: if isAuthenticated();
      // Allow update only for the owner, and don't allow changing the userId
      allow update: if isOwner(request.resource.data.userId)
                    && request.resource.data.userId == resource.data.userId;
    }

    match /reels/{reelId} {
      allow read: if true;
      allow create: if isAuthenticated();
    }
    
    match /alerts/{alertId} {
      allow read: if true;
      allow create: if isAuthenticated();
    }
    
    match /businesses/{businessId} {
      allow read: if true;
      allow create: if isAuthenticated();
    }

    match /sau_reviews/{reviewId} {
        allow read: if true;
        allow create: if isAuthenticated();
    }
    
    match /tourist_points_indicated/{pointId} {
        allow read: if true;
        allow create: if isAuthenticated();
    }

    // Subcollections for posts
    match /posts/{postId}/comments/{commentId} {
      allow read: if true;
      allow create: if isAuthenticated();
    }
    
    match /posts/{postId}/userReactions/{userId} {
      allow read: if true;
      allow create, update, delete: if isOwner(userId);
    }
    
    // Chat messages: Only authenticated users can read and write
    match /chatMessages/{messageId} {
      allow read, create: if isAuthenticated();
    }
  }
}
